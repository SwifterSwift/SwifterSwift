#if !canImport(ObjectiveC)
import XCTest

extension ArrayExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArrayExtensionsTests = [
        ("testDivided", testDivided),
        ("testKeyPathSorted", testKeyPathSorted),
        ("testPrepend", testPrepend),
        ("testRemoveAll", testRemoveAll),
        ("testRemoveAllItems", testRemoveAllItems),
        ("testRemoveDuplicates", testRemoveDuplicates),
        ("testSafeSwap", testSafeSwap),
        ("testWithoutDuplicates", testWithoutDuplicates),
    ]
}

extension BidirectionalCollectionExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BidirectionalCollectionExtensionsTests = [
        ("testOffsetSubscript", testOffsetSubscript),
    ]
}

extension BinaryFloatingPointExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BinaryFloatingPointExtensionsTests = [
        ("testRounded", testRounded),
    ]
}

extension BoolExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BoolExtensionsTests = [
        ("testInt", testInt),
        ("testString", testString),
    ]
}

extension CGColorExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CGColorExtensionsTests = [
        ("testNSColor", testNSColor),
    ]
}

extension CGFloatExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CGFloatExtensionsTests = [
        ("testAbs", testAbs),
        ("testCeil", testCeil),
        ("testDegreesToRadians", testDegreesToRadians),
        ("testDouble", testDouble),
        ("testFloat", testFloat),
        ("testFloor", testFloor),
        ("testInt", testInt),
        ("testIsNegative", testIsNegative),
        ("testIsPositive", testIsPositive),
        ("testRadiansToDegrees", testRadiansToDegrees),
    ]
}

extension CGPointExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CGPointExtensionsTests = [
        ("testAdd", testAdd),
        ("testAddEqual", testAddEqual),
        ("testDistanceFromPoint", testDistanceFromPoint),
        ("testScalarMultiply", testScalarMultiply),
        ("testScalarMultiplyEqual", testScalarMultiplyEqual),
        ("testStaticDistance", testStaticDistance),
        ("testSubtract", testSubtract),
        ("testSubtractEqual", testSubtractEqual),
    ]
}

extension CGSizeExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CGSizeExtensionsTests = [
        ("testAdd", testAdd),
        ("testAddEqual", testAddEqual),
        ("testAspectFill", testAspectFill),
        ("testAspectFit", testAspectFit),
        ("testMultiplyCGSize", testMultiplyCGSize),
        ("testMultiplyEqualCGSize", testMultiplyEqualCGSize),
        ("testMultiplyEqualScalar", testMultiplyEqualScalar),
        ("testMultiplyScalarLeft", testMultiplyScalarLeft),
        ("testMultiplyScalarRight", testMultiplyScalarRight),
        ("testSubtract", testSubtract),
        ("testSubtractEqual", testSubtractEqual),
    ]
}

extension CGVectorExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CGVectorExtensionsTests = [
        ("testAngle", testAngle),
        ("testInitWithAngleAndMagnitude", testInitWithAngleAndMagnitude),
        ("testMagnitude", testMagnitude),
        ("testNegation", testNegation),
        ("testScalarMultiplication", testScalarMultiplication),
    ]
}

extension CLLocationExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CLLocationExtensionsTests = [
        ("testBearing", testBearing),
        ("testMidLocation", testMidLocation),
    ]
}

extension CalendarExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CalendarExtensionTests = [
        ("testNumberOfDaysInAMonth", testNumberOfDaysInAMonth),
    ]
}

extension CharacterExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CharacterExtensionsTests = [
        ("testInt", testInt),
        ("testIsEmoji", testIsEmoji),
        ("testIsLetter", testIsLetter),
        ("testIsLowercased", testIsLowercased),
        ("testIsNumber", testIsNumber),
        ("testIsUpercased", testIsUpercased),
        ("testIsWhiteSpace", testIsWhiteSpace),
        ("testLowercased", testLowercased),
        ("testOperators", testOperators),
        ("testRandom", testRandom),
        ("testString", testString),
        ("testUppercased", testUppercased),
    ]
}

extension CollectionExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CollectionExtensionsTests = [
        ("testAverage", testAverage),
        ("testForEachInParallel", testForEachInParallel),
        ("testForEachSlice", testForEachSlice),
        ("testGroupBySize", testGroupBySize),
        ("testIndicesWhere", testIndicesWhere),
        ("testSafeSubscript", testSafeSubscript),
    ]
}

extension ColorExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ColorExtensionsTests = [
        ("testAlpha", testAlpha),
        ("testBlend", testBlend),
        ("testCGFloatComponents", testCGFloatComponents),
        ("testComplementary", testComplementary),
        ("testCoreImageColor", testCoreImageColor),
        ("testDarken", testDarken),
        ("testFailableInit", testFailableInit),
        ("testFailableInitWithComplementaryColor", testFailableInitWithComplementaryColor),
        ("testFailableInitWithComponents", testFailableInitWithComponents),
        ("testHexString", testHexString),
        ("testHsbaComponents", testHsbaComponents),
        ("testInit", testInit),
        ("testInitWithComponents", testInitWithComponents),
        ("testLighten", testLighten),
        ("testRandom", testRandom),
        ("testRgbComponents", testRgbComponents),
        ("testShortHexOrHexString", testShortHexOrHexString),
        ("testShortHexString", testShortHexString),
        ("testUInt", testUInt),
    ]
}

extension ComparableExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ComparableExtensionsTests = [
        ("testClamped", testClamped),
        ("testIsBetween", testIsBetween),
    ]
}

extension DataExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DataExtensionsTests = [
        ("testBytes", testBytes),
        ("testJsonObject", testJsonObject),
        ("testString", testString),
    ]
}

extension DateExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DateExtensionsTests = [
        ("testAdd", testAdd),
        ("testAdding", testAdding),
        ("testBeginning", testBeginning),
        ("testCalendar", testCalendar),
        ("testChanging", testChanging),
        ("testDateString", testDateString),
        ("testDateTimeString", testDateTimeString),
        ("testDay", testDay),
        ("testDayName", testDayName),
        ("testDaysSince", testDaysSince),
        ("testEnd", testEnd),
        ("testEra", testEra),
        ("testHour", testHour),
        ("testHoursSince", testHoursSince),
        ("testIsBetween", testIsBetween),
        ("testIsInCurrent", testIsInCurrent),
        ("testIsInCurrentMonth", testIsInCurrentMonth),
        ("testIsInCurrentWeek", testIsInCurrentWeek),
        ("testIsInCurrentYear", testIsInCurrentYear),
        ("testIsInFuture", testIsInFuture),
        ("testIsInPast", testIsInPast),
        ("testIsInToday", testIsInToday),
        ("testIsInTomorrow", testIsInTomorrow),
        ("testIsInWeekend", testIsInWeekend),
        ("testIsInYesterday", testIsInYesterday),
        ("testIso8601String", testIso8601String),
        ("testIsWithin", testIsWithin),
        ("testIsWorkday", testIsWorkday),
        ("testMillisecond", testMillisecond),
        ("testMinute", testMinute),
        ("testMinutesSince", testMinutesSince),
        ("testMonth", testMonth),
        ("testMonthName", testMonthName),
        ("testNanosecond", testNanosecond),
        ("testNearestFiveMinutes", testNearestFiveMinutes),
        ("testNearestHalfHour", testNearestHalfHour),
        ("testNearestHour", testNearestHour),
        ("testNearestQuarterHour", testNearestQuarterHour),
        ("testNearestTenMinutes", testNearestTenMinutes),
        ("testNewDateFromComponenets", testNewDateFromComponenets),
        ("testNewDateFromIntegerLiteral", testNewDateFromIntegerLiteral),
        ("testNewDateFromIso8601String", testNewDateFromIso8601String),
        ("testNewDateFromUnixTimestamp", testNewDateFromUnixTimestamp),
        ("testQuarter", testQuarter),
        ("testRandomClosedRange", testRandomClosedRange),
        ("testRandomClosedRangeWithGenerator", testRandomClosedRangeWithGenerator),
        ("testRandomRange", testRandomRange),
        ("testRandomRangeWithGenerator", testRandomRangeWithGenerator),
        ("testSecond", testSecond),
        ("testSecondsSince", testSecondsSince),
        ("testTimeString", testTimeString),
        ("testTomorrow", testTomorrow),
        ("testUnixTimestamp", testUnixTimestamp),
        ("testWeekday", testWeekday),
        ("testWeekOfMonth", testWeekOfMonth),
        ("testWeekOfYear", testWeekOfYear),
        ("testYear", testYear),
        ("testYesterday", testYesterday),
    ]
}

extension DictionaryExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DictionaryExtensionsTests = [
        ("testCompactMapKeysAndValues", testCompactMapKeysAndValues),
        ("testHasKey", testHasKey),
        ("testJsonData", testJsonData),
        ("testJsonString", testJsonString),
        ("testKeysForValue", testKeysForValue),
        ("testLowercaseAllKeys", testLowercaseAllKeys),
        ("testMapKeysAndValues", testMapKeysAndValues),
        ("testOperatorMinus", testOperatorMinus),
        ("testOperatorPlus", testOperatorPlus),
        ("testOperatorPlusEqual", testOperatorPlusEqual),
        ("testOperatorRemoveKeys", testOperatorRemoveKeys),
        ("testRemoveAll", testRemoveAll),
        ("testRemoveElementForRandomKey", testRemoveElementForRandomKey),
        ("testSubscriptKeypath", testSubscriptKeypath),
    ]
}

extension DispatchQueueExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DispatchQueueExtensionsTests = [
        ("testIsCurrent", testIsCurrent),
        ("testIsMainQueue", testIsMainQueue),
    ]
}

extension DoubleExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DoubleExtensionsTests = [
        ("testCGFloat", testCGFloat),
        ("testFloat", testFloat),
        ("testInt", testInt),
        ("testOperators", testOperators),
    ]
}

extension FileManagerExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileManagerExtensionsTests = [
        ("testCreateTemporaryDirectory", testCreateTemporaryDirectory),
        ("testInvalidFile", testInvalidFile),
        ("testJSONFromFileAtPath", testJSONFromFileAtPath),
        ("testJSONFromFileWithFilename", testJSONFromFileWithFilename),
    ]
}

extension FloatExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FloatExtensionsTests = [
        ("testCGFloat", testCGFloat),
        ("testDouble", testDouble),
        ("testInt", testInt),
        ("testOperators", testOperators),
    ]
}

extension FloatingPointExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FloatingPointExtensionsTests = [
        ("testAbs", testAbs),
        ("testCeil", testCeil),
        ("testDegreesToRadians", testDegreesToRadians),
        ("testFloor", testFloor),
        ("testIsNegative", testIsNegative),
        ("testIsPositive", testIsPositive),
        ("testOperators", testOperators),
        ("testRadiansToDegrees", testRadiansToDegrees),
    ]
}

extension IntExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IntExtensionsTests = [
        ("testCGFloat", testCGFloat),
        ("testCountableRange", testCountableRange),
        ("testDegreesToRadians", testDegreesToRadians),
        ("testDigits", testDigits),
        ("testDigitsCount", testDigitsCount),
        ("testDouble", testDouble),
        ("testFloat", testFloat),
        ("testIsPrime", testIsPrime),
        ("testKFormatted", testKFormatted),
        ("testOperators", testOperators),
        ("testRadiansToDegrees", testRadiansToDegrees),
        ("testRomanNumeral", testRomanNumeral),
        ("testRoundToNearest", testRoundToNearest),
        ("testUInt", testUInt),
    ]
}

extension LocaleExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LocaleExtensionsTests = [
        ("testPosix", testPosix),
    ]
}

extension MKMapViewTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MKMapViewTests = [
        ("testRegister", testRegister),
        ("testRegisterAndDequeue", testRegisterAndDequeue),
    ]
}

extension MKPolylineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MKPolylineTests = [
        ("testCoordinates", testCoordinates),
        ("testInitWithCoordinates", testInitWithCoordinates),
    ]
}

extension NSImageExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NSImageExtensionsTests = [
        ("testScaledToMaxSize", testScaledToMaxSize),
    ]
}

extension NSPredicateExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NSPredicateExtensionsTests = [
        ("testAndPredicate", testAndPredicate),
        ("testNot", testNot),
        ("testOperatorAndPredicate", testOperatorAndPredicate),
        ("testOperatorNot", testOperatorNot),
        ("testOperatorOrPredicate", testOperatorOrPredicate),
        ("testOperatorSubPredicate", testOperatorSubPredicate),
        ("testOrPredicate", testOrPredicate),
    ]
}

extension NSViewExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NSViewExtensionsTests = [
        ("testAddSubviews", testAddSubviews),
        ("testBorderColor", testBorderColor),
        ("testBorderWidth", testBorderWidth),
        ("testCornerRadius", testCornerRadius),
        ("testHeight", testHeight),
        ("testRemoveSubviews", testRemoveSubviews),
        ("testShadowColor", testShadowColor),
        ("testShadowOffset", testShadowOffset),
        ("testShadowOpacity", testShadowOpacity),
        ("testShadowRadius", testShadowRadius),
        ("testSize", testSize),
        ("testWidth", testWidth),
    ]
}

extension OptionalExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OptionalExtensionsTests = [
        ("testConditionalAssignment", testConditionalAssignment),
        ("testIsNilOrEmpty", testIsNilOrEmpty),
        ("testNonEmpty", testNonEmpty),
        ("testOptionalAssignment", testOptionalAssignment),
        ("testRunBlock", testRunBlock),
        ("testUnwrappedOrDefault", testUnwrappedOrDefault),
        ("testUnwrappedOrError", testUnwrappedOrError),
    ]
}

extension RandomAccessCollectionExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RandomAccessCollectionExtensionsTests = [
        ("testIndices", testIndices),
    ]
}

extension RangeReplaceableCollectionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RangeReplaceableCollectionTests = [
        ("testInitExpressionOfSize", testInitExpressionOfSize),
        ("testKeepWhile", testKeepWhile),
        ("testRemoveRandomElement", testRemoveRandomElement),
        ("testRemoveWhere", testRemoveWhere),
        ("testRotate", testRotate),
        ("testRotated", testRotated),
        ("testSkipWhile", testSkipWhile),
        ("testTakeWhile", testTakeWhile),
    ]
}

extension SequenceExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SequenceExtensionsTests = [
        ("testAccumulate", testAccumulate),
        ("testAllMatch", testAllMatch),
        ("testAnyMatch", testAnyMatch),
        ("testContains", testContains),
        ("testContainsDuplicates", testContainsDuplicates),
        ("testCountWhere", testCountWhere),
        ("testDuplicates", testDuplicates),
        ("testFilteredMap", testFilteredMap),
        ("testForEachReversed", testForEachReversed),
        ("testForEachWhere", testForEachWhere),
        ("testLastWhere", testLastWhere),
        ("testNoneMatch", testNoneMatch),
        ("testRejectWhere", testRejectWhere),
        ("testSingle", testSingle),
        ("testSum", testSum),
    ]
}

extension SignedIntegerExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignedIntegerExtensionsTests = [
        ("testAbs", testAbs),
        ("testGcd", testGcd),
        ("testIsEven", testIsEven),
        ("testIsNegative", testIsNegative),
        ("testIsOdd", testIsOdd),
        ("testIsPositive", testIsPositive),
        ("testLcm", testLcm),
        ("testString", testString),
        ("testTimeString", testTimeString),
    ]
}

extension SignedNumericExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignedNumericExtensionsTests = [
        ("testAsLocaleCurrency", testAsLocaleCurrency),
        ("testString", testString),
    ]
}

extension SpriteKitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpriteKitTests = [
        ("testDescendants", testDescendants),
    ]
}

extension StringExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringExtensionsTests = [
        ("testAppendingPathComponent", testAppendingPathComponent),
        ("testAppendingPathExtension", testAppendingPathExtension),
        ("testBase64Decoded", testBase64Decoded),
        ("testBase64Encoded", testBase64Encoded),
        ("testBold", testBold),
        ("testBool", testBool),
        ("testCamelCased", testCamelCased),
        ("testCamelize", testCamelize),
        ("testCgFloat", testCgFloat),
        ("testCharactersArray", testCharactersArray),
        ("testColored", testColored),
        ("testContain", testContain),
        ("testContainEmoji", testContainEmoji),
        ("testCopyToPasteboard", testCopyToPasteboard),
        ("testCount", testCount),
        ("testDate", testDate),
        ("testDateTime", testDateTime),
        ("testDateWithFormat", testDateWithFormat),
        ("testDouble", testDouble),
        ("testEnd", testEnd),
        ("testFirstCharacter", testFirstCharacter),
        ("testFirstCharacterUppercased", testFirstCharacterUppercased),
        ("testFloat", testFloat),
        ("testHasLetters", testHasLetters),
        ("testHasNumbers", testHasNumbers),
        ("testHasUniqueCharacters", testHasUniqueCharacters),
        ("testInitFromBase64", testInitFromBase64),
        ("testInitRandomOfLength", testInitRandomOfLength),
        ("testInt", testInt),
        ("testIntOrdinal", testIntOrdinal),
        ("testIntSpellOut", testIntSpellOut),
        ("testIsAlphabetic", testIsAlphabetic),
        ("testIsAlphaNumeric", testIsAlphaNumeric),
        ("testIsDigits", testIsDigits),
        ("testIsNumeric", testIsNumeric),
        ("testisValidEmail", testisValidEmail),
        ("testIsValidFileURL", testIsValidFileURL),
        ("testIsValidHttpsUrl", testIsValidHttpsUrl),
        ("testIsValidHttpUrl", testIsValidHttpUrl),
        ("testIsValidSchemedUrl", testIsValidSchemedUrl),
        ("testIsValidUrl", testIsValidUrl),
        ("testIsWhiteSpaces", testIsWhiteSpaces),
        ("testLastCharacter", testLastCharacter),
        ("testLastDeletingLastPathComponent", testLastDeletingLastPathComponent),
        ("testLastDeletingPathExtension", testLastDeletingPathExtension),
        ("testLastPathComponent", testLastPathComponent),
        ("testLastPathComponents", testLastPathComponents),
        ("testLastPathExtension", testLastPathExtension),
        ("testLatinize", testLatinize),
        ("testLatinized", testLatinized),
        ("testLines", testLines),
        ("testLocalized", testLocalized),
        ("testLoremIpsum", testLoremIpsum),
        ("testMatches", testMatches),
        ("testMostCommonCharacter", testMostCommonCharacter),
        ("testNSString", testNSString),
        ("testOperators", testOperators),
        ("testPaddingEnd", testPaddingEnd),
        ("testPaddingStart", testPaddingStart),
        ("testPadEnd", testPadEnd),
        ("testPadStart", testPadStart),
        ("testRandom", testRandom),
        ("testRemovingPrefix", testRemovingPrefix),
        ("testRemovingSuffix", testRemovingSuffix),
        ("testReverse", testReverse),
        ("testSlice", testSlice),
        ("testStart", testStart),
        ("testStrikethrough", testStrikethrough),
        ("testSubscript", testSubscript),
        ("testToSlug", testToSlug),
        ("testTrim", testTrim),
        ("testTrimmed", testTrimmed),
        ("testTruncate", testTruncate),
        ("testTruncated", testTruncated),
        ("testUnderline", testUnderline),
        ("testUnicodeArray", testUnicodeArray),
        ("testUrl", testUrl),
        ("testUrlDecode", testUrlDecode),
        ("testUrlDecoded", testUrlDecoded),
        ("testUrlEncode", testUrlEncode),
        ("testUrlEncoded", testUrlEncoded),
        ("testWithoutSpacesAndNewLines", testWithoutSpacesAndNewLines),
        ("testWords", testWords),
        ("testWordsCount", testWordsCount),
    ]
}

extension StringProtocolExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringProtocolExtensionsTests = [
        ("testCommonSuffix", testCommonSuffix),
    ]
}

extension URLExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__URLExtensionsTests = [
        ("testAppendingQueryParameters", testAppendingQueryParameters),
        ("testAppendQueryParameters", testAppendQueryParameters),
        ("testDeleteAllPathComponents", testDeleteAllPathComponents),
        ("testDeletingAllPathComponents", testDeletingAllPathComponents),
        ("testDropScheme", testDropScheme),
        ("testQueryParameters", testQueryParameters),
        ("testValueForQueryKey", testValueForQueryKey),
    ]
}

extension URLRequestExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__URLRequestExtensionsTests = [
        ("testInitFromURLString", testInitFromURLString),
    ]
}

extension UserDefaultsExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UserDefaultsExtensionsTests = [
        ("testDate", testDate),
        ("testFloat", testFloat),
        ("testGetCodableObject", testGetCodableObject),
        ("testSetCodableObject", testSetCodableObject),
        ("testSubscript", testSubscript),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ArrayExtensionsTests.__allTests__ArrayExtensionsTests),
        testCase(BidirectionalCollectionExtensionsTests.__allTests__BidirectionalCollectionExtensionsTests),
        testCase(BinaryFloatingPointExtensionsTests.__allTests__BinaryFloatingPointExtensionsTests),
        testCase(BoolExtensionsTests.__allTests__BoolExtensionsTests),
        testCase(CGColorExtensionsTests.__allTests__CGColorExtensionsTests),
        testCase(CGFloatExtensionsTests.__allTests__CGFloatExtensionsTests),
        testCase(CGPointExtensionsTests.__allTests__CGPointExtensionsTests),
        testCase(CGSizeExtensionsTests.__allTests__CGSizeExtensionsTests),
        testCase(CGVectorExtensionsTests.__allTests__CGVectorExtensionsTests),
        testCase(CLLocationExtensionsTests.__allTests__CLLocationExtensionsTests),
        testCase(CalendarExtensionTests.__allTests__CalendarExtensionTests),
        testCase(CharacterExtensionsTests.__allTests__CharacterExtensionsTests),
        testCase(CollectionExtensionsTests.__allTests__CollectionExtensionsTests),
        testCase(ColorExtensionsTests.__allTests__ColorExtensionsTests),
        testCase(ComparableExtensionsTests.__allTests__ComparableExtensionsTests),
        testCase(DataExtensionsTests.__allTests__DataExtensionsTests),
        testCase(DateExtensionsTests.__allTests__DateExtensionsTests),
        testCase(DictionaryExtensionsTests.__allTests__DictionaryExtensionsTests),
        testCase(DispatchQueueExtensionsTests.__allTests__DispatchQueueExtensionsTests),
        testCase(DoubleExtensionsTests.__allTests__DoubleExtensionsTests),
        testCase(FileManagerExtensionsTests.__allTests__FileManagerExtensionsTests),
        testCase(FloatExtensionsTests.__allTests__FloatExtensionsTests),
        testCase(FloatingPointExtensionsTests.__allTests__FloatingPointExtensionsTests),
        testCase(IntExtensionsTests.__allTests__IntExtensionsTests),
        testCase(LocaleExtensionsTests.__allTests__LocaleExtensionsTests),
        testCase(MKMapViewTests.__allTests__MKMapViewTests),
        testCase(MKPolylineTests.__allTests__MKPolylineTests),
        testCase(NSImageExtensionsTests.__allTests__NSImageExtensionsTests),
        testCase(NSPredicateExtensionsTests.__allTests__NSPredicateExtensionsTests),
        testCase(NSViewExtensionsTests.__allTests__NSViewExtensionsTests),
        testCase(OptionalExtensionsTests.__allTests__OptionalExtensionsTests),
        testCase(RandomAccessCollectionExtensionsTests.__allTests__RandomAccessCollectionExtensionsTests),
        testCase(RangeReplaceableCollectionTests.__allTests__RangeReplaceableCollectionTests),
        testCase(SequenceExtensionsTests.__allTests__SequenceExtensionsTests),
        testCase(SignedIntegerExtensionsTests.__allTests__SignedIntegerExtensionsTests),
        testCase(SignedNumericExtensionsTests.__allTests__SignedNumericExtensionsTests),
        testCase(SpriteKitTests.__allTests__SpriteKitTests),
        testCase(StringExtensionsTests.__allTests__StringExtensionsTests),
        testCase(StringProtocolExtensionsTests.__allTests__StringProtocolExtensionsTests),
        testCase(URLExtensionsTests.__allTests__URLExtensionsTests),
        testCase(URLRequestExtensionsTests.__allTests__URLRequestExtensionsTests),
        testCase(UserDefaultsExtensionsTests.__allTests__UserDefaultsExtensionsTests),
    ]
}
#endif
