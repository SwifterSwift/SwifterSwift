name: SwifterSwift

on: 
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  Darwin:
    name: Darwin
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: ['/Applications/Xcode_11.1.app/Contents/Developer']
    steps:
    - uses: actions/checkout@v1
    - name: Bundle Install
      run: bundle install
    - name: Brew Upgrade
      run: |
        brew update
        brew outdated xctool || brew upgrade xctool
    - name: Test iOS
      run: |
        xcodebuild clean build test -project SwifterSwift.xcodeproj -scheme SwifterSwift-iOS -destination 'platform=iOS Simulator,name=iPhone 11' | XCPRETTY_JSON_FILE_OUTPUT="xcodebuild-ios.json" xcpretty -f `xcpretty-json-formatter`
        bash <(curl -s https://codecov.io/bash) -cF ios -J 'SwifterSwift'
      env:
          DEVELOPER_DIR: ${{ matrix.xcode }}
    - name: Test MacOS
      run: |
        xcodebuild clean build test -project SwifterSwift.xcodeproj -scheme SwifterSwift-macOS -destination 'platform=OS X' | XCPRETTY_JSON_FILE_OUTPUT="xcodebuild-macos.json" xcpretty -f `xcpretty-json-formatter`
        bash <(curl -s https://codecov.io/bash) -cF macos -J 'SwifterSwift'
      env:
          DEVELOPER_DIR: ${{ matrix.xcode }}
    - name: Test TVOS
      run: |
        xcodebuild clean build test -project SwifterSwift.xcodeproj -scheme SwifterSwift-tvOS -destination 'platform=tvOS Simulator,name=Apple TV 4K (at 1080p)' | XCPRETTY_JSON_FILE_OUTPUT="xcodebuild-tvos.json" xcpretty -f `xcpretty-json-formatter`
        bash <(curl -s https://codecov.io/bash) -cF tvos -J 'SwifterSwift'
      env:
          DEVELOPER_DIR: ${{ matrix.xcode }}
    - name: Test WatchOS
      run: xcodebuild clean build test -project SwifterSwift.xcodeproj -scheme SwifterSwift-watchOS -destination 'name=Apple Watch Series 5 - 40mm' | XCPRETTY_JSON_FILE_OUTPUT="xcodebuild-ios.json" xcpretty -f `xcpretty-json-formatter`
      env:
          DEVELOPER_DIR: ${{ matrix.xcode }}

    - name: Danger Swift
      run: bundle exec danger --verbose
      
  Swiftlint:
    runs-on: [macos]
    name: SwiftLint
    steps: 
      - uses: actions/checkout@v1
      - name: SwiftLint
        run: |
          brew install swiftlint
          swiftlint
  CocoaPods:
    name: CocoaPods
    runs-on: macos-latest
    strategy:
      matrix:
        platform: ['ios', 'macos', 'tvos', 'watchos']
        xcode: ['/Applications/Xcode_11.1.app/Contents/Developer']
    steps:
    - uses: actions/checkout@v1
    - name: Bundle Install
      run: bundle install
    - name: CocoaPods ${{ matrix.platform }}
      run: bundle exec pod lib lint --skip-tests --allow-warnings --verbose --platforms=${{ matrix.platform }} 
      
  Linux:
    runs-on: [ubuntu-latest] 
    container: swift:latest
    steps:
      - uses: actions/checkout@v1
      - name: Linux
        run: swift test --parallel
